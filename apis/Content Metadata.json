{
    "openapi": "3.0.0",
    "info": {
        "title": "OT2 Content Metadata Service API",
        "description": "CMS handles object metadata. CMS APIs are tenant-based. Service/User Token is requested for accessing these APIs. Objects can be documents, files, folders, business objects, relationships and permissions. Namespaces, Categories, Types and  Traits are used for domain specific business logic. Content uploads and downloads can be done by these APIs as well. Validations and Localizations can be customized. Retention, History, Search, Filtering and Scripts are supported. Deployment bundling, upgrade, case modeling and templates are available. Default namespace is provided. System categories are cms_file, cms_folder and cms_object. User can create customized category, type definition and trait definition based on the business needs. Object instances are created based on the category, type and trait. Type can be extendable based on business needs. ETS, OTDS (Identity and Auth) and Content Storage Service (CSS) are pre-requisites to use CMS.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://na-1-dev.api.opentext.com/cms",
            "description": "Build & Test",
            "variables": {}
        },
        {
            "url": "https://na-1.api.opentext.com/cms",
            "description": "NA Production",
            "variables": {}
        }
    ],
    "security": [
        {
            "tenant": []
        }
    ],
    "tags": [
        {
            "name": "Service",
            "description": "List of top level service endpoints"
        },
        {
            "name": "Categories",
            "description": "Categories of type definitions. Out of the box categories - OBJECT, FILE, FOLDER, CASE, RELATIONSHIP. Provide common behaviors and avoids bloating of unwanted attributes."
        },
        {
            "name": "Group",
            "description": "Group of users that shares common permission."
        },
        {
            "name": "File",
            "description": "Content object in the CMS system.   Allows to store both binary content as well as metadata for an object."
        },
        {
            "name": "Folder",
            "description": "Container for objects within the CMS system.   Provides a parent hierarchy for storing objects within the system with inheritance of permissions from the parent to the child objects.ss"
        },
        {
            "name": "Business Object",
            "description": "Business Object / Content less object type"
        },
        {
            "name": "Case",
            "description": "Case model. Repeatable folder hierachy with specified permission and business constraint to ease business process. For example, HR Onboarding, Loan Application."
        },
        {
            "name": "Localizations",
            "description": "Allows to create and store localized values for display names of domain models in the system."
        },
        {
            "name": "Bundles",
            "description": "Package of type/trait definitions of an application. Provide ordered list of deployment operation entries."
        },
        {
            "name": "Permissions",
            "description": "Create access control lists which can be applied to any CMS object to manage the permits of an identity for that object.   The identity in a permission can be a user, group or application role."
        },
        {
            "name": "Retention",
            "description": "Retention Policy and Hold"
        },
        {
            "name": "Full-Text Query",
            "description": "execute full-text search"
        },
        {
            "name": "History",
            "description": "History of changes on an object instance."
        },
        {
            "name": "Case",
            "description": "Case model and Case instance related operations."
        },
        {
            "name": "Relation",
            "description": "Relationship association between two objects"
        },
        {
            "name": "Attribute",
            "description": "Type / Trait attribute resource"
        },
        {
            "name": "IndexDefinition",
            "description": "Type / Trait index definition resource"
        },
        {
            "name": "RequiredTrait",
            "description": "required trait associated with the type definition"
        },
        {
            "name": "Namespace",
            "description": "Group various component definitions based on the ownership. Avoid definitions collusion coming from different parties."
        },
        {
            "name": "Trait",
            "description": "Property bag of primitive attributes"
        },
        {
            "name": "Type",
            "description": "Model definitions for creating a structured category of objects"
        }
    ],
    "paths": {
        "/service": {
            "get": {
                "tags": [
                    "Service"
                ],
                "summary": "List all service endpoints",
                "description": "List all service endpoints",
                "operationId": "listService",
                "responses": {
                    "200": {
                        "description": "List of all service endpoints",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Service"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "List all the categories",
                "description": "List all the categories",
                "operationId": "listCategories",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Categories"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Create a new category",
                "operationId": "createCategory",
                "requestBody": {
                    "description": "New category content",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "get category by id",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "update category details",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update category payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Categories"
                ],
                "summary": "patch category details",
                "operationId": "patchCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Category",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Category payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/categories/name/{name}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "get category by name",
                "operationId": "getCategoryByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the category",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "List all groups",
                "description": "List all groups",
                "operationId": "listGroups",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Groups"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Create a new group",
                "operationId": "createGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/groups/{groupId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get group details",
                "operationId": "getGroupDetails",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "Delete group",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the group"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                }
            }
        },
        "/groups/{groupId}/members": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get group members details",
                "operationId": "getGroupMembersDetails",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved group membership details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMembers"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Parent folder not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Group"
                ],
                "summary": "Update group membership details",
                "operationId": "updateGroupMemberDetails",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated group membership",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "summary": "Add a new group member",
                "operationId": "createGroupMember",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GroupMemberInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully added a member to a group",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "Delete Group Member",
                "operationId": "deleteGroupMembers",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the group member"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Parent folder not found"
                    }
                }
            }
        },
        "/groups/{groupId}/members/{groupMemberId}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "summary": "Get group member details",
                "operationId": "getGroupMemberDetails",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "groupMemberId",
                        "in": "path",
                        "description": "Group member ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved group member details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found / Member not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "summary": "delete group members",
                "operationId": "deleteGroupMember",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "description": "Group ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "groupMemberId",
                        "in": "path",
                        "description": "Group member ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted group members"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Group not found"
                    }
                }
            }
        },
        "/instances/{category}/{type}": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "List object instances",
                "operationId": "listObjectInstances",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of namespaces",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object instances list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "create new instance",
                "operationId": "createNewInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New object instance",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/linked-parents": {
            "get": {
                "tags": [
                    "File",
                    "Folder"
                ],
                "summary": "List linked parents",
                "operationId": "listLikedParents",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance.Valid Category - file, folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Linked parents list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkedParents"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "File",
                    "Folder"
                ],
                "summary": "Add linked parent to an object",
                "operationId": "addLinkedParent",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - file, folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Locator"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkedParent"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/acl": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "get ACL associated with object instance",
                "operationId": "getInstanceACL",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ACL object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Change ACL action",
                "operationId": "changeAclAction",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Locator"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Business Object",
                    "File",
                    "Relation"
                ],
                "summary": "Update permits for an ACL associated with an object",
                "operationId": "updateInstancePermits",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PermitChange"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated permission",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/parent": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder"
                ],
                "summary": "Get parent instance details",
                "operationId": "getParentDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Changed parent object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "404": {
                        "description": "Object instance not found"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder"
                ],
                "summary": "Change parent for object instance",
                "operationId": "changeParent",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance.Valid Category - object, file, folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Locator"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Changed parent object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/copy": {
            "post": {
                "tags": [
                    "Business Object",
                    "File"
                ],
                "summary": "Copy an object instance",
                "operationId": "copyObjectInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid category - object, file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Locator"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/all": {
            "delete": {
                "tags": [
                    "File"
                ],
                "summary": "Delete all versions of an object",
                "operationId": "deleteAllVersions",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance - Valid category - file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "deleted object instance"
                    },
                    "404": {
                        "description": "Object not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "get object instance details",
                "operationId": "getObjectInstanceDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "404": {
                        "description": "Object instance not found"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "update instance details",
                "operationId": "updateInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "404": {
                        "description": "Object instance not found"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "delete object instance",
                "operationId": "deleteInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object has been successfully deleted"
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "update instance details",
                "operationId": "patchInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "404": {
                        "description": "Object instance not found"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/linked-parents/{folderId}": {
            "get": {
                "tags": [
                    "File",
                    "Folder"
                ],
                "summary": "Get linked parent details",
                "operationId": "getLinkedParentDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid category - folder, file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "ID of the folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Linked parent object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkedParent"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "File",
                    "Folder"
                ],
                "summary": "Delete linked parent",
                "operationId": "deleteLinkedParent",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid category - folder, file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "description": "ID of the folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object has been successfully deleted"
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/permissions": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Get effective permissions of the object",
                "operationId": "getEffectivePermissions",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Effective permissions of the object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EffectivePermissions"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/policies": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "List all policies of an object",
                "operationId": "listPolicies",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all policies of an object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retentions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Attach a policy to an object",
                "operationId": "attachPolicy",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetentionId"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Attach policy to object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/policies/{RetentionId}": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Get a policy of an object",
                "operationId": "getPolicy",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Policy ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the policy of an object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Update qualification date, base_date or policy replacement of an item policy",
                "operationId": "updatePolicyDates",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Policy ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyUpdates"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Delete policy for an object",
                "operationId": "deletePolicy",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Policy ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content, policy is deleted"
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/holds": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "List all holds of an object",
                "operationId": "listHolds",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all holds of an object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retentions"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Attach a hold to an object",
                "operationId": "attachHold",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetentionId"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Attach hold to object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/hold/{RetentionId}": {
            "get": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Get a hold of an object",
                "operationId": "getHold",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Hold ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List the hold of an object",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Replace existing hold to be a new hold",
                "operationId": "replaceHold",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Hold ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HoldUpdates"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder",
                    "Relation"
                ],
                "summary": "Delete hold for an object",
                "operationId": "deleteHold",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance. Valid Category - object, file, folder, relation",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Hold ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content, policy is deleted"
                    },
                    "404": {
                        "description": "Object is not found"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/search-index": {
            "post": {
                "tags": [
                    "Business Object",
                    "File",
                    "Folder"
                ],
                "summary": "Request instance to send to search",
                "operationId": "search-index",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the type. Valid category - file, folder, object, case.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instance has been queued to send to search.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/localizations": {
            "get": {
                "tags": [
                    "Localizations"
                ],
                "summary": "List all Localizations",
                "description": "List all the Localizations",
                "operationId": "listLocalizations",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of Localizations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Localizations"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Localizations"
                ],
                "summary": "update all localizations",
                "operationId": "updateAllLocalizations",
                "requestBody": {
                    "description": "Update all localizations payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipleLocalizations"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Localizations details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Localizations"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Localization not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Localizations"
                ],
                "summary": "Create a new Localization",
                "description": "Create a new Localization",
                "operationId": "createLocalization",
                "requestBody": {
                    "description": "New Localization content",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewLocalization"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New permission created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Localization"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Localizations"
                ],
                "summary": "Delete all localizations",
                "operationId": "deleteAllLocalizations",
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/localizations/{id}": {
            "get": {
                "tags": [
                    "Localizations"
                ],
                "summary": "get localization details",
                "operationId": "getLocalization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Localization",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Localization details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Localization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Localization not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Localizations"
                ],
                "summary": "update Localization details",
                "operationId": "updateLocalization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Localization",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Localization payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewLocalization"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Localization details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Localization"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Localization not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Localizations"
                ],
                "summary": "Delete Localization",
                "operationId": "deleteLocalization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Localization",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Localization not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/bundles": {
            "get": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Get all bundles",
                "operationId": "getAllBundles",
                "responses": {
                    "200": {
                        "description": "List all bundles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundles"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Create bundle using zip file or json",
                "operationId": "createBundle",
                "requestBody": {
                    "description": "A zip file",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JsonBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bundle created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/bundles/{id}": {
            "get": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Get bundle",
                "operationId": "getBundle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "if of bundle",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get a bundle",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Delete bundle",
                "operationId": "deleteBundle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of bundle",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/bundles/{bundleId}/deployments": {
            "get": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Get all bundles",
                "operationId": "getAllBundleDeployments",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List all deployments for a bundle",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BundleDeployments"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Install bundle into tenant",
                "operationId": "installBundle",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "A zip file",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InstallBundle"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bundle installed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BundleDeployment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/bundles/{bundleId}/deployments/{id}": {
            "delete": {
                "tags": [
                    "Bundles"
                ],
                "summary": "Delete bundle deployment",
                "operationId": "deleteBundleDeployment",
                "parameters": [
                    {
                        "name": "bundleId",
                        "in": "path",
                        "description": "ID of bundle",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of deployment",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "List all the permissions",
                "description": "List all the permissions",
                "operationId": "listPermissions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of namespaces",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of permissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permissions"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create a new permission",
                "description": "Create a new permission",
                "operationId": "createPermission",
                "requestBody": {
                    "description": "New permission content",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New permission created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "get permission details",
                "operationId": "getPermissionDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "update permission details",
                "operationId": "updatePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update permission payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "operationId": "deletePermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Permissions"
                ],
                "summary": "patch permission details",
                "operationId": "patchPermission",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update permission payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Permission"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission details retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/retention": {
            "get": {
                "tags": [
                    "Retention"
                ],
                "summary": "List all CMS objects with policies or holds based on the filters",
                "description": "List all CMS objects with policies or holds based on the filters",
                "operationId": "queryItemPolicy",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of retentions",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CMS objects with policies or holds based on the filters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retentions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retention/policy/{RetentionId}": {
            "put": {
                "tags": [
                    "Retention"
                ],
                "summary": "Set all item objects for null qualification date on given policy id",
                "operationId": "updateNullQualificationdate",
                "parameters": [
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Retention policy ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update permission payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyQualificationDate"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/retention/hold/{RetentionId}": {
            "delete": {
                "tags": [
                    "Retention"
                ],
                "summary": "Remove same hold id for all CMS objects",
                "operationId": "deleteSameHoldId",
                "parameters": [
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Retention hold ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/retention/item_disposition": {
            "post": {
                "tags": [
                    "Retention"
                ],
                "summary": "Dispose a list of CMS objects which is from RPS approval list",
                "operationId": "setDisposedObjects",
                "requestBody": {
                    "description": "An array of CMS object id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemDisposition"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/retention/itemPolicy": {
            "get": {
                "tags": [
                    "Retention"
                ],
                "summary": "For backward compatibility, it is old API for list all CMS objects with policies or holds based on the filters",
                "description": "List all CMS objects with policies or holds based on the filters",
                "operationId": "queryItemPolicy",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of retentions",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CMS objects with policies or holds based on the filters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Retentions"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/retention/itemPolicy/policy/{RetentionId}": {
            "put": {
                "tags": [
                    "Retention"
                ],
                "summary": "For backward compatibility, it is old API for setting all item objects for null qualification date on given policy id",
                "operationId": "updateNullQualificationdate",
                "parameters": [
                    {
                        "name": "RetentionId",
                        "in": "path",
                        "description": "Retention policy ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update permission payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PolicyQualificationDate"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/retention/itemDisposition": {
            "post": {
                "tags": [
                    "Retention"
                ],
                "summary": "For backward compatibility, it is old API for disposing a list of CMS objects which is from RPS approval list",
                "operationId": "setDisposedObjects",
                "requestBody": {
                    "description": "An array of CMS object id",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ItemDisposition"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No content"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/ft-query": {
            "post": {
                "tags": [
                    "Full-Text Query"
                ],
                "summary": "Execute full text search against search service",
                "description": "Run full text search",
                "operationId": "GetFTInstances;",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Full text search criteria",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FTQueryParameter"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Object instances list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/history": {
            "get": {
                "tags": [
                    "History"
                ],
                "summary": "Get history of changes on an object instance.",
                "operationId": "listAuditForAllVersions",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the type (file, folder, object, case)",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of history entries",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HistoryEntries"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/case/type-definitions": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "List case models",
                "operationId": "listCaseModels",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of namespaces",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Case models list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseModels"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "summary": "Create a new case model",
                "operationId": "createCaseModel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseModelInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Case model created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/case/type-definitions/{id}": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Get case model by case model id",
                "operationId": "getCaseModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Case model  successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Case"
                ],
                "summary": "Update case model by case model id",
                "operationId": "updateCaseModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseModelInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the case model",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseModel"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Case"
                ],
                "summary": "Delete case model by case model id",
                "operationId": "deleteCaseModel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the case model"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            }
        },
        "/case/case-nodes/{id}": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Get case node details by case node id",
                "operationId": "getCaseNodeDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved case node details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseNodeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case node not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Case"
                ],
                "summary": "Update case node by id",
                "operationId": "updateCaseNode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseNodeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated  the case node",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseNodeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case node not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Case"
                ],
                "summary": "Delete case node by id",
                "operationId": "deleteCaseNode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted  the case node"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case node not found"
                    }
                }
            }
        },
        "/case/case-nodes/{id}/parent": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Get case node parent details",
                "operationId": "getCaseNodeParent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated  the case node",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CaseNodeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case node not found"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/case-node/{caseNodeId}": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Get case instance details",
                "operationId": "getCaseInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the type. Valid category - file, folder.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The case model id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "caseNodeId",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Case child instance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Case"
                ],
                "summary": "Create case instance child",
                "operationId": "createChildCaseInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the type. Valid category - file, folder.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The case model id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "caseNodeId",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Case child instance created successsfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            }
        },
        "/instances/case/{type}": {
            "post": {
                "tags": [
                    "Case"
                ],
                "summary": "Create case instance",
                "operationId": "createCaseInstance",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the case instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CaseInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Case instance created successfuly",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            }
        },
        "/instances/case/{type}/{id}/case-node-instance-children": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "Get case node instances",
                "operationId": "getCaseNodeInstances",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Case child instance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/case-node/{caseNodeId}/groups": {
            "get": {
                "tags": [
                    "Case"
                ],
                "summary": "List case role groups",
                "operationId": "listCaseRoleGroups",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the type. Valid category - file, folder.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The case model id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "caseNodeId",
                        "in": "path",
                        "description": "Case node id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Case child instance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Groups"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Case model not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/lock": {
            "put": {
                "tags": [
                    "File"
                ],
                "summary": "Lock the file instance",
                "operationId": "lockFileInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Locked file instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "File"
                ],
                "summary": "Delete the lock on a file",
                "operationId": "deleteLockOnFileInstance",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the lock"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/canDownload": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Check if user privilege to download the content associated with file type",
                "operationId": "canDownloadFileContent",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Can download the file"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Object not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/make-current": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Make current to latest version",
                "operationId": "makeCurrentFileToLatestVersion",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Checked in version of the file instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/versions": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "List all versions of the file",
                "operationId": "listAllVersions",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all versions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/nextVersion": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Check in as next version",
                "operationId": "checkInNextVersion",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checked in version of the file instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/currentVersion": {
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Check in as current version",
                "operationId": "checkInCurrentVersion",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Checked in version of the file instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/contents": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "List all renditions associated with a file",
                "operationId": "listRenditions",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all renditions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Renditions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "File"
                ],
                "summary": "Add new rendition to file",
                "operationId": "addNewRendition",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rendition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New rendition created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/file/{type}/{id}/contents/{renditionId}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "get rendition detail of the file",
                "operationId": "getRenditionDetails",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "renditionId",
                        "in": "path",
                        "description": "Rendition ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return rendition detail.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "File"
                ],
                "summary": "Update a rendition",
                "operationId": "updateRendition",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "renditionId",
                        "in": "path",
                        "description": "Rendition ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rendition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated Redition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "File"
                ],
                "summary": "Delete rendition",
                "operationId": "deleteRendition",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "renditionId",
                        "in": "path",
                        "description": "Rendition ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Rendition successfully deleted"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "File"
                ],
                "summary": "Patch rendition",
                "operationId": "patchRendition",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "category is file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the file instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the file",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "renditionId",
                        "in": "path",
                        "description": "Rendition ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Rendition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rendition patched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "File not found"
                    }
                }
            }
        },
        "/instances/folder/{type}/{id}/items": {
            "get": {
                "tags": [
                    "Folder"
                ],
                "summary": "List object instances under the folder.",
                "operationId": "listFolderChildren",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category is folder.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parent folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of folder children",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Parent folder not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "Folder"
                ],
                "summary": "create object instances under the folder.",
                "operationId": "createFolderChildren",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category is folder.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the parent folder",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "created object instance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Parent folder not found"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/source-relation/{relationType}": {
            "post": {
                "tags": [
                    "Relation"
                ],
                "summary": "Get relations based on source relation type",
                "operationId": "getRelationBasedOnSourceRelationType",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "relationType",
                        "in": "path",
                        "description": "The type of the object of the source-relation.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object instances list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/instances/{category}/{type}/{id}/target-relation/{relationType}": {
            "get": {
                "tags": [
                    "Relation"
                ],
                "summary": "Get relations based on target relation type",
                "operationId": "getRelationBasedOnTargetRelationType",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The category of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "path",
                        "description": "The type of the object instance",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the object",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "relationType",
                        "in": "path",
                        "description": "The type of the object of the target-relation.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Object instances list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Instances"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/trait-definitions/{traitName}/attributes": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "List all the attributes associated with a trait",
                "description": "List all the attributes associated with a trait",
                "operationId": "listTraitAttributes",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all traits bound to an attribute",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attributes"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "create new trait attribute",
                "description": "create new trait attribute",
                "operationId": "createTraitAttribute",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewAttribute"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New attribute has been added to the trait definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/trait-definitions/{traitName}/attributes/{attributeId}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get trait attribute details",
                "description": "Get trait attribute details",
                "operationId": "getTraitAttributeDetails",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "attribute id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trait attribute details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update trait attribute details",
                "description": "Update trait attribute details",
                "operationId": "updateTraitAttribute",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "attribute id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "attribute definition has been updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Delete trait attribute",
                "description": "Delete trait attribute",
                "operationId": "deleteTraitAttribute",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The attribute id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete trait attribute successfully"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/attributes": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "List all the attributes associated with a type",
                "description": "List all the attributes associated with a type",
                "operationId": "listTypeAttributes",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all traits bound to an attribute",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attributes"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Attribute"
                ],
                "summary": "create new type attribute",
                "description": "create new type attribute",
                "operationId": "createTypeAttribute",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New attribute has been added to the type definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/attributes/{attributeId}": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get type attribute details",
                "description": "Get type attribute details",
                "operationId": "getTypeAttributeDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The id of the attribute",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type attribute details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Update type attribute details",
                "description": "Update type attribute details",
                "operationId": "updateTypeAttribute",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "attributeId",
                        "in": "path",
                        "description": "The id of the attribute",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Attribute"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "attribute definition has been updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/attributes-all": {
            "get": {
                "tags": [
                    "Attribute"
                ],
                "summary": "Get type and inherited types attributes details",
                "description": "Get type and inherited attributes details",
                "operationId": "getAllAttributeDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type attribute details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/trait-definitions/{traitName}/index-definitions": {
            "get": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "List all the index definitions associated with a trait",
                "description": "List all the index definitions associated with a trait",
                "operationId": "listTraitIndexes",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all traits bound to an attribute",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinitions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "create new index definition for trait",
                "description": "create new index definition for trait",
                "operationId": "createTraitIndex",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewIndexDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New index definition has been added to the trait",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/trait-definitions/{traitName}/index-definitions/{indexId}": {
            "get": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Get trait index definition details",
                "description": "Get trait index definition details",
                "operationId": "getTraitIndexDefinitionDetails",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trait index definition details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Update trait index definition details",
                "description": "Update trait index definition details",
                "operationId": "updateTraitIndexDefinitionDetails",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IndexDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "updated trait index definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Delete index definition details",
                "description": "Delete index definition details",
                "operationId": "deleteTraitIndexDefinition",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "description": "The name of the trait",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of the index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Index definition has been deleted successfully"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/index-definitions": {
            "get": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "List all the index definitions associated with a type",
                "description": "List all the index definitions associated with a type",
                "operationId": "listTypeIndexDefinitions",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all index definitions bound to a type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinitions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "create new type index definition",
                "description": "create new type index definition",
                "operationId": "createTypeIndexDefinition",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewIndexDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New index definition has been added to the type definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/index-definitions/{indexId}": {
            "get": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Get type index definition details",
                "description": "Get type index definition details",
                "operationId": "getTypeIndexDefinitionDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of the index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type index definition details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Update type index definition details",
                "description": "Update type index definition details",
                "operationId": "updateTypeIndexDefinition",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of the index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/IndexDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Index definition has been updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IndexDefinition"
                ],
                "summary": "Delete index definition details",
                "description": "Delete index definition details",
                "operationId": "deleteTypeIndexDefinition",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexId",
                        "in": "path",
                        "description": "The id of index",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Index definition has been deleted successfully"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/required-traits": {
            "get": {
                "tags": [
                    "RequiredTrait"
                ],
                "summary": "List all the required traits associated with the type definitions",
                "description": "List all the required traits associated with the type definitions",
                "operationId": "listRequiredTraits",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all required traits bound to a type definition",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequiredTraits"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "RequiredTrait"
                ],
                "summary": "associate a new required trait with a type definition",
                "description": "associate a new required trait with a type definition",
                "operationId": "newRequiredTrait",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewRequiredTrait"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New requried trait has been associated with the type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequiredTrait"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}/requird-traits/{requiredTraitId}": {
            "get": {
                "tags": [
                    "RequiredTrait"
                ],
                "summary": "Get required trait details",
                "description": "Get required trait details",
                "operationId": "getRequiredTraitDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requiredTraitId",
                        "in": "path",
                        "description": "required trait id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Required trait details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequiredTrait"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "RequiredTrait"
                ],
                "summary": "Update required trait details",
                "description": "Update required trait details",
                "operationId": "updateRequiredTraitDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "The name of the type",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requiredTraitId",
                        "in": "path",
                        "description": "required trait id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RequiredTrait"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "updated required trait details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RequiredTrait"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "RequiredTrait"
                ],
                "summary": "Delete the required trait definition",
                "description": "Delete the required trait definition",
                "operationId": "deleteRequiredTraitDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "description": "type name",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requiredTraitId",
                        "in": "path",
                        "description": "required trait id",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requireds trait has been successfully deleted"
                    },
                    "400": {
                        "description": "Bad request with validation failures",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/namespaces": {
            "get": {
                "tags": [
                    "Namespace"
                ],
                "summary": "Get list of Namespaces",
                "description": "The Namespace's end point lists the list of namespaces",
                "operationId": "listNamespaces",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number required",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "items-per-page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-total",
                        "in": "query",
                        "description": "whether to include total number of results in response or not",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The query search filter to filter the list of namespaces",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The sort by query parameter",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of namespaces",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Namespaces"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Namespace"
                ],
                "summary": "create a new Namespace",
                "description": "Create a new namespace",
                "operationId": "createNamespace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewNamespace"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created namespace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Namespace"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "Forbidden error"
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "Validation errors"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/namespaces/{namespaceId}": {
            "get": {
                "tags": [
                    "Namespace"
                ],
                "summary": "get Namespace Details",
                "description": "The Namespace's end point to get a namespace details using id of namespace",
                "operationId": "getNamespaceDetails",
                "parameters": [
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "Id of the namespace",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A namespace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Namespace"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "resource not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "In sufficient privileges to perform the operation"
                    }
                }
            },
            "put": {
                "tags": [
                    "Namespace"
                ],
                "summary": "Update a namespace",
                "description": "Update a namespace",
                "operationId": "updateNamespace",
                "parameters": [
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "Id of the namespace",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Namespace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated namespace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Namespace"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "In sufficient privileges to perform the operation"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Namespace"
                ],
                "summary": "Update a namespace by patch",
                "description": "Update a namespace by patch",
                "operationId": "patchNamespace",
                "parameters": [
                    {
                        "name": "namespaceId",
                        "in": "path",
                        "description": "Id of the namespace",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Namespace"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated namespace",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Namespace"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "description": "validation errors"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Namespace not found"
                    },
                    "401": {
                        "description": "Unauthorized to perform the operation"
                    },
                    "403": {
                        "description": "In sufficient privileges to perform the operation"
                    }
                }
            }
        },
        "/trait-definitions": {
            "get": {
                "tags": [
                    "Trait"
                ],
                "summary": "List all trait definitions",
                "description": "List all trait definitions",
                "operationId": "listTraitDefinitions",
                "responses": {
                    "200": {
                        "description": "List all traits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraitDefinitions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "post": {
                "tags": [
                    "Trait"
                ],
                "summary": "create a new custom trait definition",
                "operationId": "createTraitDefinition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTraitDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New Trait has been created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraitDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/trait-definitions/{traitName}": {
            "get": {
                "tags": [
                    "Trait"
                ],
                "summary": "get trait definition details",
                "operationId": "getTraitDefinitionDetails",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully retrieved the Trait details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraitDefinition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Trait"
                ],
                "summary": "update trait definition",
                "operationId": "updateTraitDefinition",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TraitDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trait definition has been updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraitDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trait"
                ],
                "summary": "delete trait definition",
                "operationId": "deleteTraitDefinitionDetails",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Delete trait definition successfully"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Trait"
                ],
                "summary": "patch trait definition",
                "operationId": "patchTraitDefinition",
                "parameters": [
                    {
                        "name": "traitName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TraitDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trait definition has been updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraitDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "List all type definitions",
                "description": "List all type definitions",
                "operationId": "listTypeDefinitions",
                "responses": {
                    "200": {
                        "description": "List all types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeDefinitions"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{category}": {
            "post": {
                "tags": [
                    "Type"
                ],
                "summary": "create a new custom type definition for the given category.",
                "description": "create a new custom type definition",
                "operationId": "createTypeDefinition",
                "parameters": [
                    {
                        "name": "category",
                        "in": "path",
                        "description": "The type category - OBJECT, FILE, FOLDER, CASE, RELATION.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTypeDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "New type definition has been created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        },
        "/type-definitions/{typeName}": {
            "get": {
                "tags": [
                    "Type"
                ],
                "summary": "get type definition details",
                "operationId": "getTypeDefinitionDetails",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type definiton details have been successfully retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeDefinition"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            },
            "put": {
                "tags": [
                    "Type"
                ],
                "summary": "update type definition",
                "description": "create a new custom type definition",
                "operationId": "updateTypeDefinition",
                "parameters": [
                    {
                        "name": "typeName",
                        "in": "path",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TypeDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type definition has been updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeDefinition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "In sufficient privileges to access the resource"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Namespaces": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Namespace"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "BundleDeploymentLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:delete": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Link"
                        }
                    }
                },
                "readOnly": true
            },
            "ValidatorParam": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Rendition": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractEntity"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "maxLength": 1024,
                                "type": "string"
                            },
                            "mime_type": {
                                "type": "string"
                            },
                            "content_size": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "blob_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "rendition_type": {
                                "type": "string",
                                "enum": [
                                    "primary",
                                    "secondary"
                                ]
                            },
                            "height": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "width": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "traits": {
                                "$ref": "#/components/schemas/Traits"
                            },
                            "_links": {
                                "$ref": "#/components/schemas/RenditionLinks"
                            }
                        }
                    }
                ]
            },
            "RenditionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:download_media": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "CaseModels": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CaseModel"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "LinkedParents": {
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/LinkedParent"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "RetentionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:delete": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:instance": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "ItemDisposition": {
                "type": "object",
                "properties": {
                    "ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                }
            },
            "Item": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 1024,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parent_folder_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "linked_parent_folder_ids": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "acl_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "latest": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "category": {
                        "type": "string",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "maxLength": 256,
                            "type": "string"
                        }
                    },
                    "traits": {
                        "$ref": "#/components/schemas/Traits"
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": true
                    },
                    "ancestor_ids": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                },
                "readOnly": true
            },
            "CaseInstance": {
                "type": "object",
                "properties": {
                    "root_node_instance": {
                        "$ref": "#/components/schemas/CaseNodeInstance"
                    }
                }
            },
            "RequiredTraits": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/RequiredTrait"
                                }
                            }
                        }
                    }
                }
            },
            "Locator": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "all_renditions": {
                        "type": "boolean"
                    }
                }
            },
            "CaseNodeLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": true,
                "readOnly": true
            },
            "NewErrormessage": {
                "required": [
                    "error_code",
                    "language",
                    "message_template"
                ],
                "type": "object",
                "properties": {
                    "error_code": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "message_template": {
                        "type": "string"
                    }
                }
            },
            "ServiceLinks": {
                "type": "object",
                "properties": {
                    "urn:eim:linkrel:acls": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:business-objects": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:type-definitions": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:documents": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:folders": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:root-folder": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:trait-definitions": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:upload": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:template:upload": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:namespace": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:type-category": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:template:type-category": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:tenant-users": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:subscription-users": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:user-aliases": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:user-roles": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:current-user": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:case-models": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:groups": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:user-tags": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:batches": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:build-version": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:localizations": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:ft-query": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:dev-tenants": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "IndexDefinition": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "unique": {
                        "type": "boolean"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/IndexDefinitionLinks"
                    }
                }
            },
            "LinkedParentLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "Permission": {
                "required": [
                    "name",
                    "permits"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "internal": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "owner": {
                        "type": "string",
                        "readOnly": true
                    },
                    "permits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permit"
                        }
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/PermissionLinks"
                    }
                }
            },
            "PolicyQualificationDate": {
                "type": "object",
                "properties": {
                    "qualification_date": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Operations": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Operation"
                                }
                            }
                        }
                    }
                }
            },
            "Categories": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "UserIdentity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "identity_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "user_profile": {
                        "type": "object",
                        "properties": {
                            "first_name": {
                                "type": "string",
                                "readOnly": true
                            },
                            "last_name": {
                                "type": "string",
                                "readOnly": true
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "readOnly": true
                            }
                        },
                        "readOnly": true
                    }
                },
                "readOnly": true
            },
            "NamespaceLinks": {
                "type": "object",
                "properties": {
                    "urn:eim:linkrel:deactivate": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "NewNamespace": {
                "required": [
                    "display_name",
                    "name",
                    "prefix"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "prefix": {
                        "maxLength": 10,
                        "minLength": 2,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    }
                }
            },
            "Bundles": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Bundle"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "Namespace": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "is_system": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "prefix": {
                        "maxLength": 10,
                        "minLength": 2,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/NamespaceLinks"
                    }
                }
            },
            "AbstractEntity": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseEntity"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "created_by": {
                                "$ref": "#/components/schemas/UserIdentity"
                            },
                            "updated_by": {
                                "$ref": "#/components/schemas/UserIdentity"
                            },
                            "create_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "etag": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                            },
                            "owner": {
                                "$ref": "#/components/schemas/UserIdentity"
                            }
                        }
                    }
                ]
            },
            "FolderLinks": {
                "type": "object",
                "readOnly": true,
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ItemLinks"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "urn:eim:linkrel:copy": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:parent_links": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:objects": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:create_children": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:policies": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:holds": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                ]
            },
            "HistoryEntry": {
                "type": "object",
                "properties": {
                    "etag": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "old_object_payload": {
                        "type": "object"
                    },
                    "new_object_payload": {
                        "type": "object"
                    },
                    "additionalData": {
                        "type": "string"
                    },
                    "remote_ip_address": {
                        "type": "string"
                    },
                    "child_id": {
                        "type": "string"
                    },
                    "object_name": {
                        "type": "string"
                    },
                    "object_id": {
                        "type": "string"
                    },
                    "data_center_name": {
                        "type": "string"
                    },
                    "data_center_id": {
                        "type": "string"
                    },
                    "subscription_id": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "object_category": {
                        "type": "string"
                    },
                    "event_message": {
                        "type": "string"
                    },
                    "event_status": {
                        "type": "string"
                    },
                    "event_application": {
                        "type": "string"
                    },
                    "event_user": {
                        "type": "string"
                    },
                    "event_source": {
                        "type": "string"
                    },
                    "action_name": {
                        "type": "string"
                    },
                    "event_id": {
                        "type": "string"
                    }
                },
                "readOnly": true
            },
            "Object": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_links": {
                                "$ref": "#/components/schemas/ItemLinks"
                            }
                        }
                    }
                ]
            },
            "GroupMembers": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GroupMember"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "format": "url",
                        "readOnly": true
                    }
                },
                "readOnly": true
            },
            "Errormessages": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Errormessage"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "Group": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GroupInput"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "readOnly": true
                            },
                            "update_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "_links": {
                                "$ref": "#/components/schemas/GroupLinks"
                            }
                        }
                    }
                ]
            },
            "GroupMember": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GroupMemberInput"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_links": {
                                "$ref": "#/components/schemas/GroupMemberLinks"
                            }
                        },
                        "readOnly": true
                    }
                ]
            },
            "NewAttribute": {
                "required": [
                    "data_type",
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "data_type": {
                        "type": "string",
                        "default": "string",
                        "enum": [
                            "string",
                            "integer",
                            "uuid",
                            "date",
                            "boolean",
                            "double",
                            "bigint"
                        ]
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "default_value": {
                        "type": "string"
                    },
                    "repeating": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "searchable": {
                        "type": "boolean"
                    },
                    "sortable": {
                        "type": "boolean"
                    },
                    "read_only": {
                        "type": "boolean"
                    },
                    "auditable": {
                        "type": "boolean"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "unique": {
                        "type": "boolean"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "localizable": {
                        "type": "boolean"
                    },
                    "validators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Validator"
                        }
                    },
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    }
                }
            },
            "Attribute": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "is_system": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "data_type": {
                        "type": "string",
                        "default": "string",
                        "enum": [
                            "string",
                            "integer",
                            "uuid",
                            "date",
                            "boolean",
                            "double",
                            "bigint"
                        ]
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "default_value": {
                        "type": "string"
                    },
                    "repeating": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "searchable": {
                        "type": "boolean"
                    },
                    "sortable": {
                        "type": "boolean"
                    },
                    "read_only": {
                        "type": "boolean"
                    },
                    "auditable": {
                        "type": "boolean"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "unique": {
                        "type": "boolean"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "localizable": {
                        "type": "boolean"
                    },
                    "validators": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Validator"
                        }
                    },
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "search-name": {
                        "type": "string"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/AttributeLinks"
                    }
                }
            },
            "PermitChange": {
                "type": "object",
                "properties": {
                    "grant": {
                        "$ref": "#/components/schemas/Permits"
                    },
                    "revoke": {
                        "$ref": "#/components/schemas/Permits"
                    }
                }
            },
            "Folder": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "_links": {
                                "$ref": "#/components/schemas/FolderLinks"
                            }
                        }
                    }
                ]
            },
            "Retention": {
                "required": [
                    "item_id",
                    "retention_id",
                    "retention_type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "item_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "retention_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "retention_type": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "qualification_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "base_Date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "event_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "owner": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RetentionLinks"
                    }
                }
            },
            "LocalizationLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "TypeDefinition": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "namespace_prefix": {
                        "type": "string"
                    },
                    "system_name": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scripts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "default_locale": {
                        "type": "string"
                    },
                    "non_auditable_actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rel_source_type": {
                        "type": "string"
                    },
                    "rel_target_type": {
                        "type": "string"
                    },
                    "rel_cardinality": {
                        "type": "string"
                    },
                    "rel_direction": {
                        "type": "string"
                    },
                    "rel_integrity_type": {
                        "type": "string"
                    },
                    "rel_source_name": {
                        "type": "string"
                    },
                    "rel_target_name": {
                        "type": "string"
                    },
                    "rel_source_display_name": {
                        "type": "string"
                    },
                    "rel_target_display_name": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/TypeDefinitionLinks"
                    }
                }
            },
            "TypeDefinitionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:namespace": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:attributes": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:index_definitions": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:type_category": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:operations": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:required_traits": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:attributes-all": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "Errormessage": {
                "required": [
                    "name",
                    "namespacekey"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "error_code": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "language": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "message_template": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/ErrormessageLinks"
                    }
                }
            },
            "Groups": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "RetentionId": {
                "required": [
                    "retention_id"
                ],
                "type": "object",
                "properties": {
                    "retention_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "IndexDefinitionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "RelationLinks": {
                "type": "object",
                "readOnly": true,
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ItemLinks"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "urn:eim:linkrel:source": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:target": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                ]
            },
            "CaseModelInput": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "root_case_node": {
                        "$ref": "#/components/schemas/CaseNode"
                    }
                }
            },
            "NewRequiredTrait": {
                "required": [
                    "instance_name",
                    "trait_name"
                ],
                "type": "object",
                "properties": {
                    "instance_name": {
                        "type": "string"
                    },
                    "trait_name": {
                        "type": "string"
                    }
                }
            },
            "Permits": {
                "type": "object",
                "properties": {
                    "identity": {
                        "type": "string"
                    },
                    "identity_type": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "deployment": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    }
                }
            },
            "JsonBundle": {
                "type": "object",
                "properties": {
                    "applicationName": {
                        "type": "string"
                    },
                    "deployment": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deployment"
                        }
                    }
                }
            },
            "Renditions": {
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "MultipleLocalizations": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/NewLocalization"
                }
            },
            "TraitDefinitions": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TraitDefinition"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "CaseNode": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "min_occurs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_occurs": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "parent_node_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "child_nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNode"
                        }
                    },
                    "default_instance": {
                        "$ref": "#/components/schemas/TypeInstanceTemplate"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNodeRole"
                        }
                    },
                    "permits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNodeRolePermit"
                        }
                    },
                    "acl_templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNodeACLTemplate"
                        }
                    },
                    "acl_template_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/Permits"
                    },
                    "permission_templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "acl_template_name": {
                        "type": "string"
                    }
                }
            },
            "Instances": {
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TypeInstance"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "CaseModelLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": true,
                "readOnly": true
            },
            "Permit": {
                "type": "object",
                "properties": {
                    "identity": {
                        "type": "string"
                    },
                    "identity_type": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TypeInstance": {
                "type": "object",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/File"
                    },
                    {
                        "$ref": "#/components/schemas/Folder"
                    },
                    {
                        "$ref": "#/components/schemas/Relation"
                    },
                    {
                        "$ref": "#/components/schemas/Object"
                    }
                ]
            },
            "Validator": {
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string"
                    },
                    "operation": {
                        "type": "string"
                    },
                    "params": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ValidatorParam"
                        }
                    }
                }
            },
            "OperationLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "NewTypeDefinition": {
                "required": [
                    "attributes",
                    "display_name",
                    "name",
                    "namespace"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "operations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "indexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NewIndexDefinition"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "scripts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NewAttribute"
                        }
                    },
                    "default_locale": {
                        "type": "string"
                    },
                    "required_traits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequiredTrait"
                        }
                    },
                    "non_auditable_actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rel_source_type": {
                        "type": "string"
                    },
                    "rel_target_type": {
                        "type": "string"
                    },
                    "rel_cardinality": {
                        "type": "string"
                    },
                    "rel_direction": {
                        "type": "string"
                    },
                    "rel_integrity_type": {
                        "type": "string"
                    },
                    "rel_source_name": {
                        "type": "string"
                    },
                    "rel_target_name": {
                        "type": "string"
                    },
                    "rel_source_display_name": {
                        "type": "string"
                    },
                    "rel_target_display_name": {
                        "type": "string"
                    }
                }
            },
            "NewTenant": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "database": {
                        "type": "string"
                    },
                    "namespacekey": {
                        "type": "string"
                    }
                }
            },
            "TypeDefinitions": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/TypeDefinition"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "ItemLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:permissions": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:acl": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:audit": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "additionalProperties": true,
                "readOnly": true
            },
            "Attributes": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Attribute"
                                }
                            }
                        }
                    }
                }
            },
            "BundleLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:delete": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:bundle-deployments": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "Traits": {
                "type": "object",
                "additionalProperties": true
            },
            "PaginationLinks": {
                "type": "object",
                "properties": {
                    "next": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "previous": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "first": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "last": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "FileLinks": {
                "type": "object",
                "readOnly": true,
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ItemLinks"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "urn:eim:linkrel:copy": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:parent_links": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:checkout": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:cancel_checkout": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:delete_all": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:contents": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:version_history": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:audit_allversions": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:download_media": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:policies": {
                                "$ref": "#/components/schemas/Link"
                            },
                            "urn:eim:linkrel:holds": {
                                "$ref": "#/components/schemas/Link"
                            }
                        }
                    }
                ]
            },
            "NewLocalization": {
                "required": [
                    "locale",
                    "multi_valued",
                    "path",
                    "scope",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "multi_valued": {
                        "type": "boolean"
                    }
                }
            },
            "EffectivePermissions": {
                "type": "object",
                "properties": {
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Permissions": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "Retentions": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Retention"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "PolicyUpdates": {
                "type": "object",
                "properties": {
                    "qualification_date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "base_Date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "retention_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "TraitDefinition": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string",
                        "readOnly": true
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "script": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "script_scope": {
                        "type": "string"
                    },
                    "script_scope_spel": {
                        "type": "string"
                    },
                    "default_locale": {
                        "type": "string"
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/TraitDefinitionLinks"
                    }
                }
            },
            "GroupInput": {
                "required": [
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 90,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserIdentity"
                        }
                    }
                }
            },
            "RequiredTraitLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "trait": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "GroupMemberLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:parent": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "GroupLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "members": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "CaseNodeExpanded": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "min_occurs": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "max_occurs": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "parent_node_id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNodeRole"
                        }
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "permission_template": {
                        "$ref": "#/components/schemas/Permission"
                    },
                    "child_nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CaseNodeExpanded"
                        }
                    },
                    "default_instance": {
                        "type": "object",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TypeInstanceTemplate"
                            }
                        ]
                    }
                }
            },
            "CaseNodeInstance": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "child_node_instances": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CaseNode"
                                }
                            },
                            "permission": {
                                "$ref": "#/components/schemas/Permits"
                            },
                            "case_model_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "case_node_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "case_instance_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "_links": {
                                "$ref": "#/components/schemas/CaseNodeLinks"
                            }
                        }
                    }
                ]
            },
            "FTQueryParameter": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "sort": {
                        "type": "string"
                    },
                    "folderId": {
                        "type": "string"
                    },
                    "fieldList": {
                        "type": "string"
                    },
                    "facet_fields": {
                        "type": "string"
                    },
                    "facet_sort": {
                        "type": "string"
                    },
                    "facet_query": {
                        "type": "string"
                    }
                }
            },
            "BundleDeployments": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/BundleDeployment"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "PatchCategory": {
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "CaseNodeRolePermit": {
                "type": "object",
                "properties": {
                    "identity": {
                        "type": "string"
                    },
                    "identity_type": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RequiredTrait": {
                "type": "object",
                "properties": {
                    "instance_name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "trait_name": {
                        "type": "string"
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/RequiredTraitLinks"
                    }
                }
            },
            "TypeInstanceWithPermits": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TypeInstance"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "permission": {
                                "$ref": "#/components/schemas/Permits"
                            }
                        }
                    }
                ]
            },
            "File": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "chronicle_id": {
                                "type": "string",
                                "format": "uuid",
                                "readOnly": true
                            },
                            "version_no": {
                                "type": "integer",
                                "format": "int32",
                                "readOnly": true
                            },
                            "version_label": {
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                    "type": "string"
                                }
                            },
                            "lock_owner_identity": {
                                "$ref": "#/components/schemas/UserIdentity"
                            },
                            "lock_time": {
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                            },
                            "renditions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Rendition"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/FileLinks"
                            }
                        }
                    }
                ]
            },
            "Category": {
                "required": [
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "base_type_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "owner": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/CategoryLinks"
                    }
                }
            },
            "TypeInstanceTemplate": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TypeInstanceWithPermits"
                    }
                ]
            },
            "NewCategory": {
                "required": [
                    "base_type",
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "base_type": {
                        "type": "string"
                    }
                }
            },
            "LinkedParent": {
                "required": [
                    "child_id",
                    "parent_id"
                ],
                "type": "object",
                "properties": {
                    "parent_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "child_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/LinkedParentLinks"
                    }
                }
            },
            "CaseModel": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "object_type": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "root_case_node": {
                        "$ref": "#/components/schemas/CaseNodeExpanded"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/CaseModelLinks"
                    }
                }
            },
            "Operation": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "command": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "condition": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "condition_spel": {
                        "type": "string"
                    },
                    "required_object_permits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "required_parent_permits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "script": {
                        "type": "array",
                        "items": {
                            "maxLength": 9999,
                            "type": "string"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "type": "string"
                        }
                    },
                    "http_request_method": {
                        "type": "string"
                    },
                    "expect_type_instance_input": {
                        "type": "boolean"
                    },
                    "expect_operation_data_input": {
                        "type": "boolean"
                    },
                    "update_type_instance": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "is_system_operation": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/OperationLinks"
                    }
                }
            },
            "NewOperation": {
                "required": [
                    "display_name",
                    "name",
                    "script"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "command": {
                        "maxLength": 256,
                        "type": "string"
                    },
                    "condition": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "condition_spel": {
                        "type": "string"
                    },
                    "required_object_permits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "required_parent_permits": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "script": {
                        "type": "array",
                        "items": {
                            "maxLength": 9999,
                            "type": "string"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "type": "string"
                        }
                    },
                    "http_request_method": {
                        "type": "string"
                    },
                    "expect_type_instance_input": {
                        "type": "boolean"
                    },
                    "expect_operation_data_input": {
                        "type": "boolean"
                    },
                    "update_type_instance": {
                        "type": "boolean"
                    }
                }
            },
            "AttributeLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "PermissionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "Relation": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Item"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "source": {
                                "type": "string"
                            },
                            "target": {
                                "type": "string"
                            },
                            "_links": {
                                "$ref": "#/components/schemas/RelationLinks"
                            }
                        }
                    }
                ]
            },
            "NewIndexDefinition": {
                "required": [
                    "columns",
                    "name",
                    "unique"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "unique": {
                        "type": "boolean"
                    },
                    "columns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "TraitDefinitionLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:namespace": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:attributes": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:index_definitions": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "Tenant": {
                "required": [
                    "name",
                    "namespacekey"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "database": {
                        "type": "string"
                    },
                    "namespacekey": {
                        "type": "string"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/TenantLinks"
                    }
                }
            },
            "HoldUpdates": {
                "type": "object",
                "properties": {
                    "retention_id": {
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "InstallBundle": {
                "type": "object",
                "properties": {
                    "prefix": {
                        "type": "string"
                    },
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "HistoryEntries": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/HistoryEntry"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "Localization": {
                "required": [
                    "locale",
                    "multi_valued",
                    "path",
                    "scope",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "path": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "locale_ltree": {
                        "type": "string"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "multi_valued": {
                        "type": "boolean"
                    },
                    "application_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "owner": {
                        "type": "string",
                        "readOnly": true
                    },
                    "created_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "update_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_by": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "etag": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "_links": {
                        "$ref": "#/components/schemas/LocalizationLinks"
                    }
                }
            },
            "CaseNodeACLTemplate": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseEntity"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "case_node_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "permits": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CaseNodeRolePermit"
                                }
                            }
                        }
                    }
                ]
            },
            "Localizations": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Localization"
                                }
                            },
                            "_links": {
                                "$ref": "#/components/schemas/PaginationLinks"
                            }
                        }
                    }
                }
            },
            "CaseNodeRole": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractEntity"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "display_name": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "case_node_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "shared": {
                                "type": "boolean"
                            },
                            "permits": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/CaseNodeRolePermit"
                                }
                            },
                            "permissions": {
                                "$ref": "#/components/schemas/Permits"
                            }
                        }
                    }
                ]
            },
            "Bundle": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "application_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "version_no": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "descriptor": {
                        "type": "string"
                    },
                    "depends_on": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "depends_on_path": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "dependsOnPathIds": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/BundleLinks"
                    }
                }
            },
            "ErrormessageLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:delete": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "NewTraitDefinition": {
                "required": [
                    "attributes",
                    "display_name",
                    "name",
                    "namespace"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 63,
                        "pattern": "^[a-z0-9_]+$",
                        "type": "string"
                    },
                    "display_name": {
                        "maxLength": 256,
                        "minLength": 1,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 2014,
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "indexes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NewIndexDefinition"
                        }
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "raw_script": {
                        "type": "string"
                    },
                    "script_scope": {
                        "type": "string"
                    },
                    "script_scope_spel": {
                        "type": "string"
                    },
                    "attributes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NewAttribute"
                        }
                    },
                    "default_locale": {
                        "type": "string"
                    }
                }
            },
            "BaseEntity": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    }
                }
            },
            "Service": {
                "type": "object",
                "properties": {
                    "_links": {
                        "$ref": "#/components/schemas/ServiceLinks"
                    }
                }
            },
            "PutCategory": {
                "required": [
                    "description",
                    "display_name",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "display_name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "IndexDefinitions": {
                "type": "object",
                "properties": {
                    "_embedded": {
                        "type": "object",
                        "properties": {
                            "collection": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/IndexDefinition"
                                }
                            }
                        }
                    }
                }
            },
            "GroupMemberInput": {
                "type": "object",
                "properties": {
                    "user_identity": {
                        "$ref": "#/components/schemas/UserIdentity"
                    }
                }
            },
            "BundleDeployment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "bundle_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "create_time": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/BundleDeploymentLinks"
                    }
                }
            },
            "TenantLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:namespace": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:upload": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            },
            "CategoryLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "edit": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "urn:eim:linkrel:base-type": {
                        "$ref": "#/components/schemas/Link"
                    }
                },
                "readOnly": true
            }
        },
        "securitySchemes": {
            "tenant": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://na-1-dev.api.opentext.com/tenants/$tenantId/.well-known/openid-configuration/"
            }
        }
    }
}