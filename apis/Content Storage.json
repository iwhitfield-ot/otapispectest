{
    "openapi": "3.0.3",
    "info": {
        "title": "OT2 Content Storage Service API",
        "description": "Content Storage Service provides storage and indexing for content and documents, which includes encryption/decryption of the content; and anti-virus and authorization checks on upload and download. It also supports Content Management Service (CMS) on storing contents and documents. CMS, ETS and Auth are pre-requisites to use CSS.",
        "version": "1.0.0"
    },
    "tags": [
        {
            "name": "Content",
            "description": "Content"
        },
        {
            "name": "Sharable Links",
            "description": "Sharable Links"
        }
    ],
    "servers": [
        {
            "url": "https://na-1-dev.api.opentext.com/css",
            "description": "Build & Test",
            "variables": {}
        },
        {
            "url": "https://na-1.api.opentext.com/css",
            "description": "NA Production",
            "variables": {}
        }
    ],
    "security": [
        {
            "tenant": []
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get all services of Content Storage Service",
                "description": "Get all services of Content Storage Service",
                "operationId": "getservice",
                "responses": {
                    "200": {
                        "description": "All services of Content Storage Service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/service"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/v2/tenant/{tenantId}/content": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Upload content for a tenant",
                "description": "Upload content for a tenant",
                "operationId": "uploadContentTenant",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "ID of tenant",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "avs-scan",
                        "in": "query",
                        "description": "Flag indicating whether or not to perform a virus scan. Reserved for trusted clients, set false to skip avs (default is true)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass binary data via multipart/form-data or in plain body",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "The property 'name' will be used for all files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Content uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/content"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/tenant/{tenantId}/usage": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get total storage used for a tenant",
                "description": "Get total storage used for a tenant",
                "operationId": "usageContentTenant",
                "parameters": [
                    {
                        "name": "tenantId",
                        "in": "path",
                        "description": "ID of tenant",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "units",
                        "in": "query",
                        "description": "Units to use for storage display (possible values are B, KB, MB, GB, TB, default is MB)",
                        "required": false,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Usage statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tenantUsageResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/v2/upload/{id}/content": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Upload content with upload URL",
                "description": "Upload content with upload URL",
                "operationId": "uploadContentURL",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of upload",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "avs-scan",
                        "in": "query",
                        "description": "Flag indicating whether or not to perform a virus scan. Reserved for trusted clients, set false to skip avs (default is true)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pass binary data via multipart/form-data or in plain body",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "The property 'name' will be used for all files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Content uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/content"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/content/{id}/download": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Download content",
                "description": "Download content",
                "operationId": "downloadcontent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the content",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "object-id",
                        "in": "query",
                        "description": "The ID of the object attached with the content",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "file-name",
                        "in": "query",
                        "description": "The name of the file in response",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "mime-type",
                        "in": "query",
                        "description": "The mime type of the content. This has higher priority than the Accept header",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "disposition-type",
                        "in": "query",
                        "description": "Content disposition of the downloaded content",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "avs-scan",
                        "in": "query",
                        "description": "Flag indicating whether or not to perform a virus scan. Reserved for trusted clients, set false to skip avs (default is true)",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content downloaded",
                        "content": {
                            "multipart/form-data": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/content": {
            "post": {
                "tags": [
                    "Content"
                ],
                "summary": "Tenant user upload content",
                "description": "Tenant user upload content",
                "operationId": "uploadContent",
                "requestBody": {
                    "description": "Pass binary data via multipart/form-data or in plain body",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "description": "The property 'name' will be used for all files",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                }
                            }
                        },
                        "application/octet-stream": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Content uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/content"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/content/{id}": {
            "get": {
                "tags": [
                    "Content"
                ],
                "summary": "Get details of a specific content",
                "description": "Get details of a specific content",
                "operationId": "getContent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the content",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "object-id",
                        "in": "query",
                        "description": "The ID of the object attached with the content",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Content downloaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/content"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/content/{id}/publicShareUrl": {
            "post": {
                "tags": [
                    "Sharable Links"
                ],
                "summary": "Create a new sharable-link for download",
                "description": "Create a new sharable-link for download",
                "operationId": "createSharableLink",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of upload",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "object-id",
                        "in": "query",
                        "description": "The ID of the object attached with the content",
                        "required": false,
                        "style": "form",
                        "explode": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Password and expiry",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/newLinkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Download URL",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newLinkResponse"
                                }
                            }
                        }
                    },
                    "207": {
                        "description": "The request is finished, but not all resources are processed successfully. Check the response body for more details"
                    },
                    "302": {
                        "description": "The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        },
        "/v2/content/{id}/publicShareUrl/{urlId}": {
            "delete": {
                "tags": [
                    "Sharable Links"
                ],
                "summary": "Delete a sharable link",
                "description": "Delete a sharable link",
                "operationId": "deleteSharableLink",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of upload",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "urlId",
                        "in": "path",
                        "description": "ID of download url",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deletion successfully, No content"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            },
            "put": {
                "tags": [
                    "Sharable Links"
                ],
                "summary": "Update a sharable link",
                "description": "Update a sharable link",
                "operationId": "updateSharableLink",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of upload",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "urlId",
                        "in": "path",
                        "description": "ID of download url",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Expiry",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateLinkRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newLinkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            },
            "get": {
                "tags": [
                    "Sharable Links"
                ],
                "summary": "Retrieve sharable link object",
                "description": "Retrieve sharable link object",
                "operationId": "getSharableLink",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of upload",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "urlId",
                        "in": "path",
                        "description": "ID of download url",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/newLinkResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized to access the resource"
                    },
                    "403": {
                        "description": "Insufficient privileges to access the resource"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "412": {
                        "description": "Precondition failed"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "tenant": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://na-1-dev.api.opentext.com/tenants/$tenantId/.well-known/openid-configuration/"
            }
        },
        "schemas": {
            "contentLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "download": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "service": {
                "type": "object",
                "properties": {
                    "_links": {
                        "$ref": "#/components/schemas/serviceLinks"
                    }
                }
            },
            "content": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/entry"
                        }
                    },
                    "_links": {
                        "$ref": "#/components/schemas/contentLinks"
                    }
                }
            },
            "entry": {
                "type": "object",
                "properties": {
                    "objectId": {
                        "type": "string"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "providerId": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "subscriptionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "blobId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "nullable": true
                    },
                    "renditions": {
                        "type": "array",
                        "nullable": true,
                        "items": {
                            "$ref": "#/components/schemas/rendition"
                        }
                    }
                }
            },
            "rendition": {
                "type": "object",
                "properties": {
                    "mimeType": {
                        "type": "string"
                    },
                    "fileName": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "newLinkRequest": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "updateLinkRequest": {
                "type": "object",
                "properties": {
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "newLinkResponse": {
                "type": "object",
                "properties": {
                    "issuedToken": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "objectId": {
                        "type": "string"
                    },
                    "serviceId": {
                        "type": "string"
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "secured": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    },
                    "_links": {
                        "$ref": "#/components/schemas/sharableLinks"
                    }
                }
            },
            "tenantUsageResponse": {
                "type": "object",
                "properties": {
                    "tenantId": {
                        "type": "string"
                    },
                    "tenantUsageSize": {
                        "type": "string"
                    },
                    "tenantUsageUnits": {
                        "type": "string"
                    },
                    "dateOfLastUpload": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "createdDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedBy": {
                        "type": "string"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "serviceLinks": {
                "type": "object",
                "properties": {
                    "content": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "upload": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "attach": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "detach": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "provider": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "sharableLinks": {
                "type": "object",
                "properties": {
                    "self": {
                        "$ref": "#/components/schemas/Link"
                    },
                    "token": {
                        "$ref": "#/components/schemas/Link"
                    }
                }
            },
            "Link": {
                "type": "object",
                "properties": {
                    "href": {
                        "type": "string",
                        "format": "url",
                        "readOnly": true
                    }
                },
                "readOnly": true
            }
        }
    }
}